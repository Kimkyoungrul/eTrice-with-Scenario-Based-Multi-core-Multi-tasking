/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass PTcpPayload
 * 
 */

#ifndef _ROOM_BASIC_SERVICE_TCP_PTCPPAYLOAD_H_
#define _ROOM_BASIC_SERVICE_TCP_PTCPPAYLOAD_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"


#include "room/basic/service/tcp/DTcpPayload.h"


/* message IDs */
enum PTcpPayload_msg_ids {
	PTcpPayload_MSG_MIN = 0,
	PTcpPayload_OUT_dataPackage = 1,
	PTcpPayload_IN_dataPackage = 2,
	PTcpPayload_MSG_MAX = 3
};

/*--------------------- port structs and methods */
typedef etPort PTcpPayloadPort;
typedef etReplPort PTcpPayloadReplPort;


void PTcpPayloadPort_dataPackage(const PTcpPayloadPort* self, DTcpPayload* data);
void PTcpPayloadReplPort_dataPackage_broadcast(const PTcpPayloadReplPort* self, DTcpPayload* data);
void PTcpPayloadReplPort_dataPackage(const PTcpPayloadReplPort* self, int idx, DTcpPayload* data);


etInt32 PTcpPayloadReplPort_getReplication(const PTcpPayloadReplPort* self);
typedef etPort PTcpPayloadConjPort;
typedef etReplPort PTcpPayloadConjReplPort;


void PTcpPayloadConjPort_dataPackage(const PTcpPayloadConjPort* self, DTcpPayload* data);
void PTcpPayloadConjReplPort_dataPackage_broadcast(const PTcpPayloadConjReplPort* self, DTcpPayload* data);
void PTcpPayloadConjReplPort_dataPackage(const PTcpPayloadConjReplPort* self, int idx, DTcpPayload* data);


etInt32 PTcpPayloadConjReplPort_getReplication(const PTcpPayloadConjReplPort* self);

/*--------------------- debug helpers */

/* get message string for message id */
const char* PTcpPayload_getMessageString(int msg_id);


#endif /* _ROOM_BASIC_SERVICE_TCP_PTCPPAYLOAD_H_ */

