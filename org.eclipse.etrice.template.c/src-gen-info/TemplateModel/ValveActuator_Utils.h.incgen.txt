/**
 * @author generated by eTrice
 *
 * Utils File of ActorClass ValveActuator
 *
 */

#ifndef _TEMPLATEMODEL_VALVEACTUATOR_UTILS_H_
#define _TEMPLATEMODEL_VALVEACTUATOR_UTILS_H_

#include "TemplateModel/ValveActuator.h"

/*
 * access macros for ports, operations and attributes
*/

/* simple event ports */
#define receiveData_receiveThrottleData() SendDataPort_receiveThrottleData(&self->constData->receiveData)
#define receiveData_receiveSpeedData() SendDataPort_receiveSpeedData(&self->constData->receiveData)
#define receiveData_receiveInjectionData() SendDataPort_receiveInjectionData(&self->constData->receiveData)
#define receiveData_receiveIgnitionData() SendDataPort_receiveIgnitionData(&self->constData->receiveData)
#define receiveData_receiveABSData() SendDataPort_receiveABSData(&self->constData->receiveData)

/* data receive ports */

/* data send ports */

/* saps */
#define timer_startTimer(data) PTimerConjPort_startTimer(&self->constData->timer, data)
#define timer_startTimeout(data) PTimerConjPort_startTimeout(&self->constData->timer, data)
#define timer_kill() PTimerConjPort_kill(&self->constData->timer)

/* replicated event ports */

/* services */

/* operations */
#define ALKchoicePoint0(s_code) ValveActuator_ALKchoicePoint0(self, s_code)
#define lane_change() ValveActuator_lane_change(self)

/* attributes */
#define wheelstart (self->wheelstart)
#define abs (self->abs)
#define wheeltime (self->wheeltime)
#define abstime (self->abstime)

/* port operations */

#endif /* _TEMPLATEMODEL_VALVEACTUATOR_UTILS_H_ */

